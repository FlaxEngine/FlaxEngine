
/* This file is generated by glib-mkenums, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */

#pragma once

#include <gio/gio.h>
#include <libportal/portal-helpers.h>

G_BEGIN_DECLS

/* enumerations from "account.h" */
XDP_PUBLIC
GType xdp_user_information_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_USER_INFORMATION_FLAGS (xdp_user_information_flags_get_type ())

/* enumerations from "background.h" */
XDP_PUBLIC
GType xdp_background_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_BACKGROUND_FLAGS (xdp_background_flags_get_type ())

/* enumerations from "camera.h" */
XDP_PUBLIC
GType xdp_camera_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_CAMERA_FLAGS (xdp_camera_flags_get_type ())

/* enumerations from "dynamic-launcher.h" */
XDP_PUBLIC
GType xdp_launcher_type_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_LAUNCHER_TYPE (xdp_launcher_type_get_type ())

/* enumerations from "email.h" */
XDP_PUBLIC
GType xdp_email_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_EMAIL_FLAGS (xdp_email_flags_get_type ())

/* enumerations from "filechooser.h" */
XDP_PUBLIC
GType xdp_open_file_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_OPEN_FILE_FLAGS (xdp_open_file_flags_get_type ())
XDP_PUBLIC
GType xdp_save_file_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_SAVE_FILE_FLAGS (xdp_save_file_flags_get_type ())

/* enumerations from "inhibit.h" */
XDP_PUBLIC
GType xdp_inhibit_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_INHIBIT_FLAGS (xdp_inhibit_flags_get_type ())
XDP_PUBLIC
GType xdp_login_session_state_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_LOGIN_SESSION_STATE (xdp_login_session_state_get_type ())
XDP_PUBLIC
GType xdp_session_monitor_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_SESSION_MONITOR_FLAGS (xdp_session_monitor_flags_get_type ())

/* enumerations from "inputcapture.h" */
XDP_PUBLIC
GType xdp_input_capability_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_INPUT_CAPABILITY (xdp_input_capability_get_type ())

/* enumerations from "location.h" */
XDP_PUBLIC
GType xdp_location_accuracy_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_LOCATION_ACCURACY (xdp_location_accuracy_get_type ())
XDP_PUBLIC
GType xdp_location_monitor_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_LOCATION_MONITOR_FLAGS (xdp_location_monitor_flags_get_type ())

/* enumerations from "notification.h" */
XDP_PUBLIC
GType xdp_notification_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_NOTIFICATION_FLAGS (xdp_notification_flags_get_type ())

/* enumerations from "openuri.h" */
XDP_PUBLIC
GType xdp_open_uri_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_OPEN_URI_FLAGS (xdp_open_uri_flags_get_type ())

/* enumerations from "print.h" */
XDP_PUBLIC
GType xdp_print_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_PRINT_FLAGS (xdp_print_flags_get_type ())

/* enumerations from "remote.h" */
XDP_PUBLIC
GType xdp_session_state_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_SESSION_STATE (xdp_session_state_get_type ())
XDP_PUBLIC
GType xdp_output_type_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_OUTPUT_TYPE (xdp_output_type_get_type ())
XDP_PUBLIC
GType xdp_device_type_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_DEVICE_TYPE (xdp_device_type_get_type ())
XDP_PUBLIC
GType xdp_screencast_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_SCREENCAST_FLAGS (xdp_screencast_flags_get_type ())
XDP_PUBLIC
GType xdp_cursor_mode_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_CURSOR_MODE (xdp_cursor_mode_get_type ())
XDP_PUBLIC
GType xdp_persist_mode_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_PERSIST_MODE (xdp_persist_mode_get_type ())
XDP_PUBLIC
GType xdp_remote_desktop_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_REMOTE_DESKTOP_FLAGS (xdp_remote_desktop_flags_get_type ())
XDP_PUBLIC
GType xdp_button_state_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_BUTTON_STATE (xdp_button_state_get_type ())
XDP_PUBLIC
GType xdp_discrete_axis_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_DISCRETE_AXIS (xdp_discrete_axis_get_type ())
XDP_PUBLIC
GType xdp_key_state_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_KEY_STATE (xdp_key_state_get_type ())

/* enumerations from "screenshot.h" */
XDP_PUBLIC
GType xdp_screenshot_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_SCREENSHOT_FLAGS (xdp_screenshot_flags_get_type ())

/* enumerations from "session.h" */
XDP_PUBLIC
GType xdp_session_type_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_SESSION_TYPE (xdp_session_type_get_type ())

/* enumerations from "spawn.h" */
XDP_PUBLIC
GType xdp_spawn_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_SPAWN_FLAGS (xdp_spawn_flags_get_type ())

/* enumerations from "updates.h" */
XDP_PUBLIC
GType xdp_update_status_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_UPDATE_STATUS (xdp_update_status_get_type ())
XDP_PUBLIC
GType xdp_update_monitor_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_UPDATE_MONITOR_FLAGS (xdp_update_monitor_flags_get_type ())
XDP_PUBLIC
GType xdp_update_install_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_UPDATE_INSTALL_FLAGS (xdp_update_install_flags_get_type ())

/* enumerations from "wallpaper.h" */
XDP_PUBLIC
GType xdp_wallpaper_flags_get_type (void) G_GNUC_CONST;
#define XDP_TYPE_WALLPAPER_FLAGS (xdp_wallpaper_flags_get_type ())
G_END_DECLS

/* Generated data ends here */

