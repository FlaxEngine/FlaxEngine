<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.VisualStudio.Setup.Configuration.Interop</name>
    </assembly>
    <members>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.IEnumSetupInstances">
            <summary>
            An enumerator of installed <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.IEnumSetupInstances.Next(System.Int32,Microsoft.VisualStudio.Setup.Configuration.ISetupInstance[],System.Int32@)">
            <summary>
            Retrieves the next set of product instances in the enumeration sequence.
            </summary>
            <param name="celt">The number of product instances to retrieve.</param>
            <param name="rgelt">A pointer to an array of <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance"/>.</param>
            <param name="pceltFetched">A pointer to the number of product instances retrieved. If <paramref name="celt"/> is 1 this parameter may be NULL.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.IEnumSetupInstances.Skip(System.Int32)">
            <summary>
            Skips the next set of product instances in the enumeration sequence.
            </summary>
            <param name="celt">The number of product instances to skip.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.IEnumSetupInstances.Reset">
            <summary>
            Resets the enumeration sequence to the beginning.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.IEnumSetupInstances.Clone">
            <summary>
            Creates a new enumeration object in the same state as the current enumeration object: the new object points to the same place in the enumeration sequence.
            </summary>
            <returns>A pointer to a pointer to a new <see cref="T:Microsoft.VisualStudio.Setup.Configuration.IEnumSetupInstances"/> interface. If the method fails, this parameter is undefined.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.InstanceState">
            <summary>
            The state of an <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2"/>.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Setup.Configuration.InstanceState.None">
            <summary>
            The instance state has not been determined.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Setup.Configuration.InstanceState.Local">
            <summary>
            The instance installation path exists.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Setup.Configuration.InstanceState.Registered">
            <summary>
            A product is registered to the instance.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Setup.Configuration.InstanceState.NoRebootRequired">
            <summary>
            No reboot is required for the instance.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Setup.Configuration.InstanceState.NoErrors">
            <summary>
            No errors were reported for the instance.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Setup.Configuration.InstanceState.Complete">
            <summary>
            The instance represents a complete install.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupConfiguration">
            <summary>
            Gets information about product instances installed on the machine.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupConfiguration.EnumInstances">
            <summary>
            Enumerates all launchable product instances installed.
            </summary>
            <returns>An enumeration of installed product instances.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupConfiguration.GetInstanceForCurrentProcess">
            <summary>
            Gets the instance for the current process path.
            </summary>
            <returns>The instance for the current process path.</returns>
            <remarks>
            The returned instance may not be launchable.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupConfiguration.GetInstanceForPath(System.String)">
            <summary>
            Gets the instance for the given path.
            </summary>
            <param name="path">Path used to determine instance</param>
            <returns>The instance for the given path.</returns>
            <remarks>
            The returned instance may not be launchable.
            </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupConfiguration2">
            <summary>
            Gets information about product instances set up on the machine.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupConfiguration2.EnumInstances">
            <summary>
            Enumerates all launchable product instances installed.
            </summary>
            <returns>An enumeration of installed product instances.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupConfiguration2.GetInstanceForCurrentProcess">
            <summary>
            Gets the instance for the current process path.
            </summary>
            <returns>The instance for the current process path.</returns>
            <remarks>
            The returned instance may not be launchable.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupConfiguration2.GetInstanceForPath(System.String)">
            <summary>
            Gets the instance for the given path.
            </summary>
            <param name="path">Path used to determine instance</param>
            <returns>The instance for the given path.</returns>
            <remarks>
            The returned instance may not be launchable.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupConfiguration2.EnumAllInstances">
            <summary>
            Enumerates all product instances.
            </summary>
            <returns>An enumeration of all product instances.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorInfo">
            <summary>
            Information about errors that occured during install of an instance.
            </summary>
            <remarks>
            May also implement <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupPropertyStore"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorInfo.GetErrorHResult">
            <summary>
            Gets the HRESULT of the error.
            </summary>
            <returns>The HRESULT of the error.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorInfo.GetErrorClassName">
            <summary>
            Gets the class name of the error (exception).
            </summary>
            <returns>The class name of the error (exception).</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorInfo.GetErrorMessage">
            <summary>
            Gets the error message.
            </summary>
            <returns>The error message.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorState">
            <summary>
            Information about the error state of an instance.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorState.GetFailedPackages">
            <summary>
            Gets an array of failed package references.
            </summary>
            <returns>An array of failed package references.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorState.GetSkippedPackages">
            <summary>
            Gets an array of skipped package references.
            </summary>
            <returns>An array of skipped package references.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorState2">
            <summary>
            Information about the error state of an instance.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorState2.GetFailedPackages">
            <summary>
            Gets an array of failed package references.
            </summary>
            <returns>An array of failed package references.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorState2.GetSkippedPackages">
            <summary>
            Gets an array of skipped package references.
            </summary>
            <returns>An array of skipped package references.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorState2.GetErrorLogFilePath">
            <summary>
            Gets the path to the error log.
            </summary>
            <returns>The path to the error log.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorState2.GetLogFilePath">
            <summary>
            Gets the path to the main setup log.
            </summary>
            <returns>The path to the main setup log.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorState3">
            <summary>
            Information about the error state of an instance.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorState3.GetFailedPackages">
            <summary>
            Gets an array of failed package references.
            </summary>
            <returns>An array of failed package references.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorState3.GetSkippedPackages">
            <summary>
            Gets an array of skipped package references.
            </summary>
            <returns>An array of skipped package references.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorState3.GetErrorLogFilePath">
            <summary>
            Gets the path to the error log.
            </summary>
            <returns>The path to the error log.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorState3.GetLogFilePath">
            <summary>
            Gets the path to the main setup log.
            </summary>
            <returns>The path to the main setup log.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupErrorState3.GetRuntimeError">
            <summary>
            Gets the runtime error that occured during install of an instance.
            </summary>
            <returns>The runtime error that occured during install of an instance.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference">
            <summary>
            A reference to a failed package.
            </summary>
            <remarks>
            You can enumerate all properties of basic types by casting to an <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupPropertyStore"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference.GetId">
            <summary>
            Gets the general package identifier.
            </summary>
            <returns>The general package identifier.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference.GetVersion">
            <summary>
            Gets the version of the package.
            </summary>
            <returns>The version of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference.GetChip">
            <summary>
            Gets the target process architecture of the package.
            </summary>
            <returns>The target process architecture of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference.GetLanguage">
            <summary>
            Gets the language and optional region identifier.
            </summary>
            <returns>The language and optional region identifier.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference.GetBranch">
            <summary>
            Gets the build branch of the package.
            </summary>
            <returns>The build branch of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference.GetType">
            <summary>
            Gets the type of the package.
            </summary>
            <returns>The type of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference.GetUniqueId">
            <summary>
            Gets the unique identifier consisting of all defined tokens.
            </summary>
            <returns>The unique identifier consisting of all defined tokens.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference.GetIsExtension">
            <summary>
            Gets a value indicating whether the package refers to an external extension.
            </summary>
            <returns>A value indicating whether the package refers to an external extension.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference2">
            <summary>
            A reference to a failed package.
            </summary>
            <remarks>
            You can enumerate all properties of basic types by casting to an <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupPropertyStore"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference2.GetId">
            <summary>
            Gets the general package identifier.
            </summary>
            <returns>The general package identifier.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference2.GetVersion">
            <summary>
            Gets the version of the package.
            </summary>
            <returns>The version of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference2.GetChip">
            <summary>
            Gets the target process architecture of the package.
            </summary>
            <returns>The target process architecture of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference2.GetLanguage">
            <summary>
            Gets the language and optional region identifier.
            </summary>
            <returns>The language and optional region identifier.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference2.GetBranch">
            <summary>
            Gets the build branch of the package.
            </summary>
            <returns>The build branch of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference2.GetType">
            <summary>
            Gets the type of the package.
            </summary>
            <returns>The type of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference2.GetUniqueId">
            <summary>
            Gets the unique identifier consisting of all defined tokens.
            </summary>
            <returns>The unique identifier consisting of all defined tokens.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference2.GetIsExtension">
            <summary>
            Gets a value indicating whether the package refers to an external extension.
            </summary>
            <returns>A value indicating whether the package refers to an external extension.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference2.GetLogFilePath">
            <summary>
            Gets the path to the optional package log.
            </summary>
            <returns>The path to the optional package log.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference2.GetDescription">
            <summary>
            Gets the description of the package failure.
            </summary>
            <returns>The description of the package failure.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference2.GetSignature">
            <summary>
            Gets the signature to use for feedback reporting.
            </summary>
            <returns>The signature to use for feedback reporting.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference2.GetDetails">
            <summary>
            Gets the array of details for this package failure.
            </summary>
            <returns>An array of details for this package failure.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference2.GetAffectedPackages">
            <summary>
            Gets an array of packages affected by this package failure.
            </summary>
            <returns>An array of packages affected by this package failure. This may be null.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference3">
            <summary>
            A reference to a failed package.
            </summary>
            <remarks>
            You can enumerate all properties of basic types by casting to an <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupPropertyStore"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference3.GetId">
            <summary>
            Gets the general package identifier.
            </summary>
            <returns>The general package identifier.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference3.GetVersion">
            <summary>
            Gets the version of the package.
            </summary>
            <returns>The version of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference3.GetChip">
            <summary>
            Gets the target process architecture of the package.
            </summary>
            <returns>The target process architecture of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference3.GetLanguage">
            <summary>
            Gets the language and optional region identifier.
            </summary>
            <returns>The language and optional region identifier.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference3.GetBranch">
            <summary>
            Gets the build branch of the package.
            </summary>
            <returns>The build branch of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference3.GetType">
            <summary>
            Gets the type of the package.
            </summary>
            <returns>The type of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference3.GetUniqueId">
            <summary>
            Gets the unique identifier consisting of all defined tokens.
            </summary>
            <returns>The unique identifier consisting of all defined tokens.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference3.GetIsExtension">
            <summary>
            Gets a value indicating whether the package refers to an external extension.
            </summary>
            <returns>A value indicating whether the package refers to an external extension.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference3.GetLogFilePath">
            <summary>
            Gets the path to the optional package log.
            </summary>
            <returns>The path to the optional package log.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference3.GetDescription">
            <summary>
            Gets the description of the package failure.
            </summary>
            <returns>The description of the package failure.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference3.GetSignature">
            <summary>
            Gets the signature to use for feedback reporting.
            </summary>
            <returns>The signature to use for feedback reporting.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference3.GetDetails">
            <summary>
            Gets the array of details for this package failure.
            </summary>
            <returns>An array of details for this package failure.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference3.GetAffectedPackages">
            <summary>
            Gets an array of packages affected by this package failure.
            </summary>
            <returns>An array of packages affected by this package failure. This may be null.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference3.GetAction">
            <summary>
            Gets the action attempted when the package failed.
            </summary>
            <returns>The action, eg. Install, Download, etc.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupFailedPackageReference3.GetReturnCode">
            <summary>
            Gets the return code of the failure.
            </summary>
            <returns>The return code.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupHelper">
            <summary>
            Helper functions.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupHelper.ParseVersion(System.String)">
            <summary>
            Parses a dotted quad version string into a 64-bit unsigned integer.
            </summary>
            <param name="version">The dotted quad version string to parse, e.g. 1.2.3.4.</param>
            <returns>A 64-bit unsigned integer representing the version. You can compare this to other versions.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupHelper.ParseVersionRange(System.String,System.UInt64@,System.UInt64@)">
            <summary>
            Parses a dotted quad version string into a 64-bit unsigned integer.
            </summary>
            <param name="versionRange">The string containing 1 or 2 dotted quad version strings to parse, e.g. [1.0,) that means 1.0.0.0 or newer.</param>
            <param name="minVersion">A 64-bit unsigned integer representing the minimum version, which may be 0. You can compare this to other versions.</param>
            <param name="maxVersion">A 64-bit unsigned integer representing the maximum version, which may be MAXULONGLONG. You can compare this to other versions.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance">
            <summary>
            Information about an instance of a product.
            </summary>
            <remarks>
            You can enumerate all properties of basic types by casting to an <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupPropertyStore"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance.GetInstanceId">
            <summary>
            Gets the instance identifier (should match the name of the parent instance directory).
            </summary>
            <returns>The instance identifier.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance.GetInstallDate">
            <summary>
            Gets the local date and time when the installation was originally installed.
            </summary>
            <returns>The local date and time when the installation was originally installed.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance.GetInstallationName">
            <summary>
            Gets the unique name of the installation, often indicating the branch and other information used for telemetry.
            </summary>
            <returns>The unique name of the installation, often indicating the branch and other information used for telemetry.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance.GetInstallationPath">
            <summary>
            Gets the path to the installation root of the product.
            </summary>
            <returns>The path to the installation root of the product.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance.GetInstallationVersion">
            <summary>
            Gets the version of the product installed in this instance.
            </summary>
            <returns>The version of the product installed in this instance.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance.GetDisplayName(System.Int32)">
            <summary>
            Gets the display name (title) of the product installed in this instance.
            </summary>
            <param name="lcid">The LCID for the display name.</param>
            <returns>The display name (title) of the product installed in this instance.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance.GetDescription(System.Int32)">
            <summary>
            Gets the description of the product installed in this instance.
            </summary>
            <param name="lcid">The LCID for the description.</param>
            <returns>The description of the product installed in this instance.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance.ResolvePath(System.String)">
            <summary>
            Resolves the optional relative path to the root path of the instance.
            </summary>
            <param name="pwszRelativePath">A relative path within the instance to resolve, or NULL to get the root path.</param>
            <returns>The full path to the optional relative path within the instance. If the relative path is NULL, the root path will always terminate in a backslash.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2">
            <summary>
            Information about an instance of a product.
            </summary>
            <remarks>
            You can enumerate all properties of basic types by casting to an <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupPropertyStore"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.GetInstanceId">
            <summary>
            Gets the instance identifier (should match the name of the parent instance directory).
            </summary>
            <returns>The instance identifier.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.GetInstallDate">
            <summary>
            Gets the local date and time when the installation was originally installed.
            </summary>
            <returns>The local date and time when the installation was originally installed.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.GetInstallationName">
            <summary>
            Gets the unique name of the installation, often indicating the branch and other information used for telemetry.
            </summary>
            <returns>The unique name of the installation, often indicating the branch and other information used for telemetry.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.GetInstallationPath">
            <summary>
            Gets the path to the installation root of the product.
            </summary>
            <returns>The path to the installation root of the product.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.GetInstallationVersion">
            <summary>
            Gets the version of the product installed in this instance.
            </summary>
            <returns>The version of the product installed in this instance.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.GetDisplayName(System.Int32)">
            <summary>
            Gets the display name (title) of the product installed in this instance.
            </summary>
            <param name="lcid">The LCID for the display name.</param>
            <returns>The display name (title) of the product installed in this instance.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.GetDescription(System.Int32)">
            <summary>
            Gets the description of the product installed in this instance.
            </summary>
            <param name="lcid">The LCID for the description.</param>
            <returns>The description of the product installed in this instance.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.ResolvePath(System.String)">
            <summary>
            Resolves the optional relative path to the root path of the instance.
            </summary>
            <param name="pwszRelativePath">A relative path within the instance to resolve, or NULL to get the root path.</param>
            <returns>The full path to the optional relative path within the instance. If the relative path is NULL, the root path will always terminate in a backslash.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.GetState">
            <summary>
            Gets the state of the instance.
            </summary>
            <returns>The state of the instance.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.GetPackages">
            <summary>
            Gets an array of package references registered to the instance.
            </summary>
            <returns>An array of package references registered to the instance.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.GetProduct">
            <summary>
            Gets a package reference to the product registered to the instance
            </summary>
            <returns>A package reference to the product registered to the instance. This may be null if <see cref="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.GetState"/> does not return <see cref="F:Microsoft.VisualStudio.Setup.Configuration.InstanceState.Complete"/>.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.GetProductPath">
            <summary>
            Gets the relative path to the product application, if available.
            </summary>
            <returns>The relative path to the product application, if available.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.GetErrors">
            <summary>
            Gets the error state of the instance, if available.
            </summary>
            <returns>The error state of the instance, if available.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.IsLaunchable">
            <summary>
            Gets a value indicating whether the instance can be launched.
            </summary>
            <returns>Whether the instance can be launched.</returns>
            <remarks>
            An instance could have had errors during install but still be launched. Some features may not work correctly, but others will.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.IsComplete">
            <summary>
            Gets a value indicating whether the instance is complete.
            </summary>
            <returns>Whether the instance is complete.</returns>
            <remarks>
            An instance is complete if it had no errors during install, resume, or repair.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.GetProperties">
            <summary>
            Gets product-specific properties.
            </summary>
            <returns>An <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupPropertyStore"/> of product-specific properties, or null if no properties are defined.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance2.GetEnginePath">
            <summary>
            Gets the directory path to the setup engine that installed the instance.
            </summary>
            <returns>The directory path to the setup engine that installed the instance.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupInstanceCatalog">
            <summary>
            Information about a catalog used to install an instance.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstanceCatalog.GetCatalogInfo">
            <summary>
            Gets catalog information properties.
            </summary>
            <returns>An <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupPropertyStore"/> containing catalog information properties.</returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">The property is not defined or invalid.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupInstanceCatalog.IsPrerelease">
            <summary>
            Gets a value indicating whether the catalog is a prerelease.
            </summary>
            <returns>A value indicating whether the catalog is a prerelease.</returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">The property is not defined or invalid.</exception>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupLocalizedProperties">
            <summary>
            Provides localized properties of an instance of a product.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupLocalizedProperties.GetLocalizedProperties">
            <summary>
            Gets localized product-specific properties.
            </summary>
            <returns>An <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupLocalizedPropertyStore"/> of localized product-specific properties, or null if no properties are defined.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupLocalizedProperties.GetLocalizedChannelProperties">
            <summary>
            Gets localized channel-specific properties.
            </summary>
            <returns>An <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupLocalizedPropertyStore"/> of localized channel-specific properties, or null if no properties are defined.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupLocalizedPropertyStore">
            <summary>
            Provides localized named properties.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupLocalizedPropertyStore.GetNames(System.Int32)">
            <summary>
            Gets an array of property names in this property store.
            </summary>
            <param name="lcid">The LCID for the property names.</param>
            <returns>An array of property names in this property store.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupLocalizedPropertyStore.GetValue(System.String,System.Int32)">
            <summary>
            Gets the value of a named property in this property store.
            </summary>
            <param name="pwszName">The name of the property to get.</param>
            <param name="lcid">The LCID for the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupPackageReference">
            <summary>
            A reference to a package.
            </summary>
            <remarks>
            You can enumerate all properties of basic types by casting to an <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupPropertyStore"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupPackageReference.GetId">
            <summary>
            Gets the general package identifier.
            </summary>
            <returns>The general package identifier.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupPackageReference.GetVersion">
            <summary>
            Gets the version of the package.
            </summary>
            <returns>The version of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupPackageReference.GetChip">
            <summary>
            Gets the target process architecture of the package.
            </summary>
            <returns>The target process architecture of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupPackageReference.GetLanguage">
            <summary>
            Gets the language and optional region identifier.
            </summary>
            <returns>The language and optional region identifier.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupPackageReference.GetBranch">
            <summary>
            Gets the build branch of the package.
            </summary>
            <returns>The build branch of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupPackageReference.GetType">
            <summary>
            Gets the type of the package.
            </summary>
            <returns>The type of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupPackageReference.GetUniqueId">
            <summary>
            Gets the unique identifier consisting of all defined tokens.
            </summary>
            <returns>The unique identifier consisting of all defined tokens.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupPackageReference.GetIsExtension">
            <summary>
            Gets a value indicating whether the package refers to an external extension.
            </summary>
            <returns>A value indicating whether the package refers to an external extension.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupPolicy">
            <summary>
            Gets setup policy values.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupPolicy.GetSharedInstallationPath">
            <summary>
            Gets the value of the SharedInstallationPath policy.
            </summary>
            <returns>The value of the SharedInstallationPath policy.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupPolicy.GetValue(System.String)">
            <summary>
            Gets the value of a named policy.
            </summary>
            <param name="pwszName">The name of the policy to get.</param>
            <returns>The value of the named policy.</returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">COM failure, including E_NOTSUPPORT (0x80070032) if the named policy is not supported by this implementation.</exception>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference">
            <summary>
            A reference to a product package.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference.GetId">
            <summary>
            Gets the general package identifier.
            </summary>
            <returns>The general package identifier.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference.GetVersion">
            <summary>
            Gets the version of the package.
            </summary>
            <returns>The version of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference.GetChip">
            <summary>
            Gets the target process architecture of the package.
            </summary>
            <returns>The target process architecture of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference.GetLanguage">
            <summary>
            Gets the language and optional region identifier.
            </summary>
            <returns>The language and optional region identifier.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference.GetBranch">
            <summary>
            Gets the build branch of the package.
            </summary>
            <returns>The build branch of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference.GetType">
            <summary>
            Gets the type of the package.
            </summary>
            <returns>The type of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference.GetUniqueId">
            <summary>
            Gets the unique identifier consisting of all defined tokens.
            </summary>
            <returns>The unique identifier consisting of all defined tokens.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference.GetIsExtension">
            <summary>
            Gets a value indicating whether the package refers to an external extension.
            </summary>
            <returns>A value indicating whether the package refers to an external extension.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference.GetIsInstalled">
            <summary>
            Gets a value indicating whether the product package is installed.
            </summary>
            <returns>A value indicating whether the product package is installed.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference2">
            <summary>
            A reference to a product package.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference2.GetId">
            <summary>
            Gets the general package identifier.
            </summary>
            <returns>The general package identifier.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference2.GetVersion">
            <summary>
            Gets the version of the package.
            </summary>
            <returns>The version of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference2.GetChip">
            <summary>
            Gets the target process architecture of the package.
            </summary>
            <returns>The target process architecture of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference2.GetLanguage">
            <summary>
            Gets the language and optional region identifier.
            </summary>
            <returns>The language and optional region identifier.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference2.GetBranch">
            <summary>
            Gets the build branch of the package.
            </summary>
            <returns>The build branch of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference2.GetType">
            <summary>
            Gets the type of the package.
            </summary>
            <returns>The type of the package.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference2.GetUniqueId">
            <summary>
            Gets the unique identifier consisting of all defined tokens.
            </summary>
            <returns>The unique identifier consisting of all defined tokens.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference2.GetIsExtension">
            <summary>
            Gets a value indicating whether the package refers to an external extension.
            </summary>
            <returns>A value indicating whether the package refers to an external extension.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference2.GetIsInstalled">
            <summary>
            Gets a value indicating whether the product package is installed.
            </summary>
            <returns>A value indicating whether the product package is installed.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupProductReference2.GetSupportsExtensions">
            <summary>
            Gets a value indicating whether the product supports extensions.
            </summary>
            <returns>A value indicating whether the product supports extensions.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.ISetupPropertyStore">
            <summary>
            Provides named properties.
            </summary>
            <remarks>
            You can get this from an <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupInstance"/>, <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupPackageReference"/>, or derivative.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupPropertyStore.GetNames">
            <summary>
            Gets an array of property names in this property store.
            </summary>
            <returns>An array of property names in this property store.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Setup.Configuration.ISetupPropertyStore.GetValue(System.String)">
            <summary>
            Gets the value of a named property in this property store.
            </summary>
            <param name="pwszName">The name of the property to get.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.SetupConfiguration">
            <summary>
            The implementation of <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupConfiguration2"/>.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Setup.Configuration.SetupConfigurationClass">
            <summary>
            Class that implements <see cref="T:Microsoft.VisualStudio.Setup.Configuration.ISetupConfiguration"/>.
            </summary>
        </member>
    </members>
</doc>
